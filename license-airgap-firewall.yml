---
- hosts: fw
  connection: local

  vars:
    auth_code: '{{ auth_code }}'
    api_key: '{{ api_key }}'
    first_time: '{{ first_time }}'


  collections:
    - mrichardson03.panos


  tasks:
    - name: Include User Variables
      include_vars: vars/main.yml

    - name: Check if device is ready
      panos_check:

    - name: View System Info
      panos_facts:
      register: facts

    - name: debug
      debug:
        var: facts

    - name: Activate VM Licenses with API
      uri:
        url: https://api.paloaltonetworks.com/api/license/activate
        method: POST
        headers:
          apiKey: '{{ api_key }}'
        body_format: form-urlencoded
        body:
          cpuid: '{{ ansible_net_vm_cpuid }}'
          uuid: '{{ ansible_net_vm_uuid }}'
          authCode: '{{ auth_code }}'
      register: reg
      when: first_time == "yes"

    - name: Retrieve Previously Activated Licenses with API
      uri:
        url: https://api.paloaltonetworks.com/api/license/activate
        method: POST
        headers:
          apiKey: '{{ api_key }}'
        body_format: form-urlencoded
        body:
          cpuid: '{{ ansible_net_vm_cpuid }}'
          uuid: '{{ ansible_net_vm_uuid }}'
      register: rereg
      when: first_time == "no"

    - name: Save API Response
      set_fact:
        key_list: "{% if first_time=='yes' %}{{ reg.json }}{% else %}{{ rereg.json }}{% endif %}"

    - name:
      block:
        - name: Push PA-VM license key to Firewall, will wait for reboot on failure
          panos_op:
            cmd: '<request><license><install>{{ key_list[0].keyField }}</install></license></request>'
            cmd_is_xml: true

      rescue:
        - name: Pause for reboot check
          pause:
            seconds: 30

        - name: Check if device is ready before retrying
          panos_check:

    - name: Push remaining license keys to Firewall
      panos_op:
        cmd: '<request><license><install>{{ item.keyField }}</install></license></request>'
        cmd_is_xml: true
      loop: '{{ key_list }}'
      loop_control:
        label: "{{ item.featureField }}"
        pause: 1